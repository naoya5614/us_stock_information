name: US EOD Liquidity Report (Diag Safe)

on:
  workflow_dispatch: {}     # 手動実行用
  schedule:
    - cron: '40 10 * * 1-5' # 19:40 JST（平日）※GitHub は UTC で動作
    - cron: '00 11 * * 1-5' # 20:00 JST（平日）

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        shell: bash
        run: |
          set -euo pipefail
          python -V
          python -m pip install --upgrade pip
          pip install pandas numpy requests tqdm pyarrow yfinance
          which zip || (sudo apt-get update && sudo apt-get install -y zip)
          which dos2unix || (sudo apt-get update && sudo apt-get install -y dos2unix)
          which timeout || (sudo apt-get update && sudo apt-get install -y coreutils)

      - name: Smoke test env
        shell: bash
        run: "python -c 'import pandas, numpy, yfinance; print(\"OK: imports\")'"

      # === 公式ディレクトリからユニバースCSVを構築（NYSE/Nasdaq の ACTIVE 普通株のみ） ===
      - name: Build universe from official directories (Nasdaq Trader, robust)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p data
          # --- ダウンロード関数：ミラー優先（www → apex → ftp）、HTTP/HTTPS 両方、短いリトライ＋ハードタイムアウト ---
          fetch_file() {
            local out="$1" ; shift
            local urls=("$@")
            local ok=0
            for u in "${urls[@]}"; do
              echo "[fetch] $u -> $out"
              if timeout 40s curl -fsS \
                   --connect-timeout 8 --max-time 25 \
                   --retry 2 --retry-delay 2 --retry-all-errors \
                   -o "$out" "$u"; then
                dos2unix "$out" >/dev/null 2>&1 || true
                local sz
                sz=$(wc -c < "$out" || echo 0)
                if [ "$sz" -ge 2048 ]; then
                  echo "[fetch] ok size=${sz} bytes"
                  ok=1
                  break
                else
                  echo "[fetch] too small (${sz} bytes), will try next URL"
                fi
              else
                echo "[fetch] curl failed, trying next URL"
              fi
            done
            if [ "$ok" -ne 1 ]; then
              echo "::error::Failed to fetch $out from all mirrors"
              exit 1
            fi
          }

          NAS_URLS=(
            "https://www.nasdaqtrader.com/dynamic/SymDir/nasdaqlisted.txt"
            "http://www.nasdaqtrader.com/dynamic/SymDir/nasdaqlisted.txt"
            "https://nasdaqtrader.com/dynamic/SymDir/nasdaqlisted.txt"
            "http://nasdaqtrader.com/dynamic/SymDir/nasdaqlisted.txt"
            "https://ftp.nasdaqtrader.com/dynamic/SymDir/nasdaqlisted.txt"
            "http://ftp.nasdaqtrader.com/dynamic/SymDir/nasdaqlisted.txt"
          )
          OTH_URLS=(
            "https://www.nasdaqtrader.com/dynamic/SymDir/otherlisted.txt"
            "http://www.nasdaqtrader.com/dynamic/SymDir/otherlisted.txt"
            "https://nasdaqtrader.com/dynamic/SymDir/otherlisted.txt"
            "http://nasdaqtrader.com/dynamic/SymDir/otherlisted.txt"
            "https://ftp.nasdaqtrader.com/dynamic/SymDir/otherlisted.txt"
            "http://ftp.nasdaqtrader.com/dynamic/SymDir/otherlisted.txt"
          )

          fetch_file "data/nasdaqlisted.txt" "${NAS_URLS[@]}"
          fetch_file "data/otherlisted.txt"  "${OTH_URLS[@]}"

          echo "[head] nasdaqlisted.txt:"
          head -n 3 data/nasdaqlisted.txt || true
          echo "[head] otherlisted.txt:"
          head -n 3 data/otherlisted.txt || true

          # --- ここでは「ファイル」を呼ぶだけ（YAML 解析に影響させない） ---
          python3 scripts/build_universe.py

      # === レポート実行（EOD／上位流動性N銘柄、ユニバースは上のCSV、データ源は yf→tiingo→alphav） ===
      - name: Run report (EOD, top-liquidity, CSV universe, yf→tiingo→alphav)
        shell: bash
        env:
          TIINGO_API_TOKEN: ${{ secrets.TIINGO_API_TOKEN }}
          ALPHAVANTAGE_API_KEY: ${{ secrets.ALPHAVANTAGE_API_KEY }}
        run: |
          set -euo pipefail
          TS=$(TZ=Asia/Tokyo date +%Y%m%d)
          mkdir -p out/$TS
          python run_us_eod_liquidity_report.py \
            --N 1500 \
            --since_days 560 \
            --universe "sp500,nasdaq100,dow30,r1000,sp400,sp600" \
            --universe_source "file:data/universe.csv" \
            --source_order "yf,tiingo,alphav" \
            --outdir out/$TS
          # 最新コピー
          rm -rf out/latest && mkdir -p out/latest && cp -r out/$TS/* out/latest/

      - name: Pack single ZIP
        shell: bash
        run: |
          set -euo pipefail
          TS=$(TZ=Asia/Tokyo date +%Y%m%d)
          cd out && zip -rq ../us-eod-report-$TS.zip . && cd ..
          ls -lh us-eod-report-$TS.zip

      - name: Upload ZIP
        uses: actions/upload-artifact@v4
        with:
          name: us-eod-report
          path: us-eod-report-*.zip
          retention-days: 14
